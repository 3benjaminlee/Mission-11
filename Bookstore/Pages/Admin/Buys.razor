@page "/admin/buys"
@inherits OwningComponentBase<IBuyRepository>

<BuyTable TableTitle="Not Shipped Yet" Buys="UncollectedBuys"
          ButtonLabel="Bought" BoughtSelected="CollectBuy"></BuyTable>

<BuyTable TableTitle="Shipped" Buys="CollectedBuys"
          ButtonLabel="Reset" BoughtSelected="ResetBuy"></BuyTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {

    public IBuyRepository repo => Service;

    public IEnumerable<Buy> AllBuys { get; set; }
    public IEnumerable<Buy> UncollectedBuys { get; set; }
    public IEnumerable<Buy> CollectedBuys { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllBuys = await repo.Buys.ToListAsync();
        UncollectedBuys = AllBuys.Where(x => !x.BuyReceived);
        CollectedBuys = AllBuys.Where(x => x.BuyReceived);
    }

    public void CollectBuy(int id) => UpdateBuy(id, true);
    public void ResetBuy(int id) => UpdateBuy(id, false);

    private void UpdateBuy (int id, bool bought)
    {
        Buy b = repo.Buys.FirstOrDefault(x => x.BuyId == id);
        b.BuyReceived = bought;
        repo.SaveBuy(b);
    }
}